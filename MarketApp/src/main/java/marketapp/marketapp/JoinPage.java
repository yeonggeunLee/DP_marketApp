/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package marketapp.marketapp;

import DTO.UserDTO;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.Reader;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

/**
 *
 * @author 이영근
 */
public class JoinPage extends javax.swing.JFrame {

    /**
     * Creates new form JoinPage
     */
    private boolean idConfirm = true;
    private boolean pw1Confirm = true;
    private boolean pw2Confirm = true;
    private boolean allConfirm = true;
    private boolean membershipProgress = false;

    private final int MIN = 6;
    private final int MAX = 15;
    // 영어, 숫자, 특수문자 포함한 MIN to MAX 글자 정규식
    private final String checkPattern
            = "^((?=.*\\d)(?=.*[a-zA-Z])(?=.*[\\W]).{" + MIN + "," + MAX + "})$";
    private final String idCheckPattern
            = "[!@#$%^&*(),.?\":{}|<>]";
    // 휴대폰 정규식
    private final String phoneCheckPattern
            = "^01([0|1|6|7|8|9])[0-9]{7,8}$";
    private final String nameCheckPattern
            = "^[가-힣]{1,4}$";
    // 공백 문자 정규식
    private final String BLANKPT = "(\\s)";
    Matcher matcher;

    private JSONObject finalObject;
    private JSONArray jsonArr;
    private static final String FILENAME = "src\\main\\java\\JsonData\\join.json";
    File fileP = new File("src\\main\\java\\JsonData\\join.json");

    public JoinPage() {
        this.jsonArr = new JSONArray();
        this.finalObject = new JSONObject();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rGroup = new javax.swing.ButtonGroup();
        customerB = new javax.swing.JRadioButton();
        adminB = new javax.swing.JRadioButton();
        idTF = new javax.swing.JTextField();
        nameTF = new javax.swing.JTextField();
        phoneTF = new javax.swing.JTextField();
        idLabel = new javax.swing.JLabel();
        pwLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        phoneLabel = new javax.swing.JLabel();
        joinButton = new javax.swing.JButton();
        cancleButton = new javax.swing.JButton();
        idcButton = new javax.swing.JButton();
        pwcButton = new javax.swing.JButton();
        pw2Label = new javax.swing.JLabel();
        pwc2Button = new javax.swing.JButton();
        pwcheckLabel = new javax.swing.JLabel();
        pwTF = new javax.swing.JPasswordField();
        pw2TF = new javax.swing.JPasswordField();
        pw2checkLabel = new javax.swing.JLabel();
        idcheckLabel = new javax.swing.JLabel();
        phonecheckLabel = new javax.swing.JLabel();
        namecheckLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("회원가입");
        setName("JoinPage"); // NOI18N
        setResizable(false);
        setType(java.awt.Window.Type.POPUP);

        rGroup.add(customerB);
        customerB.setSelected(true);
        customerB.setText("고객");
        customerB.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        customerB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerBActionPerformed(evt);
            }
        });

        rGroup.add(adminB);
        adminB.setText("관리자");
        adminB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminBActionPerformed(evt);
            }
        });

        idTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idTFActionPerformed(evt);
            }
        });

        phoneTF.setText("010-0000-0000");
        phoneTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneTFActionPerformed(evt);
            }
        });

        idLabel.setText("아이디");

        pwLabel.setText("비밀번호");

        nameLabel.setText("이름");

        phoneLabel.setText("휴대폰번호");

        joinButton.setText("가입하기");
        joinButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                joinButtonActionPerformed(evt);
            }
        });

        cancleButton.setText("취소");
        cancleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancleButtonActionPerformed(evt);
            }
        });

        idcButton.setText("확인");
        idcButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idcButtonActionPerformed(evt);
            }
        });

        pwcButton.setText("확인");
        pwcButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwcButtonActionPerformed(evt);
            }
        });

        pw2Label.setText("비밀번호 재확인");

        pwc2Button.setText("재확인");
        pwc2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwc2ButtonActionPerformed(evt);
            }
        });

        pwcheckLabel.setText("영문 대소문자, 특수문자 포함 6글자 이상");

        pwTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwTFActionPerformed(evt);
            }
        });

        pw2TF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pw2TFActionPerformed(evt);
            }
        });

        pw2checkLabel.setText("비밀번호 재확인 해주세요.");

        idcheckLabel.setText("아이디를 입력해주세요.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(468, 468, 468)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(joinButton, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cancleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pwcheckLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(phonecheckLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(idLabel)
                                    .addComponent(pwLabel)
                                    .addComponent(pw2Label)
                                    .addComponent(nameLabel)
                                    .addComponent(phoneLabel))
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(pw2checkLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(idTF)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(customerB)
                                        .addGap(251, 251, 251)
                                        .addComponent(adminB))
                                    .addComponent(nameTF)
                                    .addComponent(phoneTF)
                                    .addComponent(pwTF)
                                    .addComponent(pw2TF)
                                    .addComponent(idcheckLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(namecheckLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(idcButton, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                    .addComponent(pwcButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pwc2Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(517, 517, 517))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(180, 180, 180)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerB)
                    .addComponent(adminB))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idTF, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idLabel)
                    .addComponent(idcButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(idcheckLabel)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pwcButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pwLabel)
                    .addComponent(pwTF, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pwcheckLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pw2Label)
                    .addComponent(pwc2Button, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pw2TF, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pw2checkLabel)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(namecheckLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phoneTF, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(phoneLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(phonecheckLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(joinButton, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(295, 295, 295))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void adminBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_adminBActionPerformed

    private void customerBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerBActionPerformed

    private void joinButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_joinButtonActionPerformed
        // TODO add your handling code here:
        String nameSave = nameTF.getText();
        String pwSave = pwTF.getText();
        String idSave = idTF.getText();
        String phoneSave = phoneTF.getText();

        Boolean joinCheck1 = false;
        Boolean joinCheck2 = false;
        Boolean joinCheck3 = false;
        Boolean joinCheck4 = false;

        matcher = Pattern.compile(phoneCheckPattern).matcher(phoneSave);
        if (matcher.matches()) {
            phonecheckLabel.setText("전화번호 양식에 맞게 작성해주세요.");
            joinCheck1 = false;
        } else {
            phonecheckLabel.setText("입력한 전화번호: " + phoneSave);
            joinCheck1 = true;
        }

        matcher = Pattern.compile(nameCheckPattern).matcher(nameSave);
        if (!matcher.matches()) {
            namecheckLabel.setText("이름은 최대 4글자까지만 허용합니다.");
            joinCheck2 = false;
        } else {
            namecheckLabel.setText("입력한 이름: " + nameSave);
            joinCheck2 = true;
        }

        try {
            if (idConfirm == true && pw1Confirm == true && pw2Confirm == true && (joinCheck2 == true) && (joinCheck1 == true)) {
                try {
                    BufferedReader br = new BufferedReader(new FileReader(fileP));
                    if (br.readLine() == null) {
                        JSONObject object = new JSONObject();
                        object.put("ID", idSave);
                        object.put("Password", pwSave);
                        object.put("Name", nameSave);
                        object.put("Phone", phoneSave);
                        if (customerB.isSelected()) {
                            object.put("Type", "고객");
                        } else if (adminB.isSelected()) {
                            object.put("Type", "관리자");
                        }

                        this.jsonArr.add(object);
                        this.finalObject.put("member", jsonArr);
                        try {
                            FileWriter file = new FileWriter(FILENAME, true);
                            file.write(finalObject.toJSONString());
                            file.flush();
                        } catch (IOException ae) {
                            ae.printStackTrace();
                        }
                    } else {
                        JSONParser parser = new JSONParser();
                        Object obj = parser.parse(new FileReader(FILENAME));
                        JSONObject json = (JSONObject) obj;

                        JSONObject object = new JSONObject();
                        object.put("ID", idSave);
                        object.put("Password", pwSave);
                        object.put("Name", nameSave);
                        object.put("Phone", phoneSave);
                        if (customerB.isSelected()) {
                            object.put("Type", "고객");
                        } else if (adminB.isSelected()) {
                            object.put("Type", "관리자");
                        }

                        this.jsonArr = (JSONArray) json.get("member");
                        jsonArr.add(object);
                        try {
                            FileWriter file = new FileWriter(FILENAME);
                            file.write(json.toJSONString());
                            file.flush();
                        } catch (IOException ae) {
                            ae.printStackTrace();
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
                membershipProgress = true;
                JOptionPane.showMessageDialog(null, "회원가입을 축하합니다!!");
                this.setVisible(false);
            }/* else if (idConfirm == false || pw1Confirm == false || pw2Confirm == false || (joinCheck2 == false) && (joinCheck1 == false)) {
                JOptionPane.showMessageDialog(null, "입력정보를 다시 확인해주세요.");
            }*/ else {
                JOptionPane.showMessageDialog(null, "입력정보를 다시 확인해주세요.");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "회원가입에 실패하였습니다.");
            this.setVisible(false);
        }

    }//GEN-LAST:event_joinButtonActionPerformed

    private void cancleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancleButtonActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_cancleButtonActionPerformed

    private void idTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idTFActionPerformed

    private void idcButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idcButtonActionPerformed
        // TODO add your handling code here:
        Boolean idTest1 = false;
        Boolean idTest2 = false;
        Boolean idTest3 = false;
        Boolean idTest4 = false;
        Boolean idTest5 = false;

        String iID = idTF.getText();
        // ASCII 문자 비교를 위한 UpperCase
        String tmpId = iID.toUpperCase();
        // 문자열 길이
        int strLen = tmpId.length();

        try {
            // 아이디 미입력 체크
            if (idTF == null || "".equals(idTF)) {
                idcheckLabel.setText("아이디를 입력해주세요.");
                idTest1 = false;
                this.idConfirm = false;
            } else {
                idTest1 = true;
            }
            // 아이디 입력 길이 체크
            if (idTF.getText().length() < 6 || idTF.getText().length() > 15) {
                idcheckLabel.setText("아이디는 6자리 이상, 15자리 이하만 가능 합니다.");
                idTest2 = false;
                this.idConfirm = false;
            } else {
                idTest2 = true;
            }

            // 공백 정규식 체크
            matcher = Pattern.compile(BLANKPT).matcher(tmpId);
            if (matcher.find()) {
                idcheckLabel.setText("입력한 아이디 안에 공백이 있습니다.");
                this.idConfirm = false;
                idTest3 = false;
            } else {
                idTest3 = true;
            }

            // 아이디 정규식 체크
            matcher = Pattern.compile(idCheckPattern).matcher(tmpId);
            if (matcher.find()) {
                idcheckLabel.setText("입력한 아이디 안에 특수문자가 존재합니다.");
                idTest4 = false;
                System.out.println(idTest4);
                this.idConfirm = false;
            } else {
                idTest4 = true;
            }

            if (idTest1 == true && idTest2 == true && idTest3 == true && idTest4 == true) {
                JSONParser parser = new JSONParser();
                FileReader reader = new FileReader(FILENAME);
                Object obj = parser.parse(reader);
                JSONObject jsonObj = (JSONObject) obj;
                reader.close();
                JSONArray memArray = (JSONArray) jsonObj.get("member");
                for (int i = 0; i < memArray.size(); i++) {
                    JSONObject sameID = (JSONObject) memArray.get(i);
                    if (sameID.get("ID").equals(idTF.getText())) {
                        idcheckLabel.setText("중복된 아이디입니다.");
                        //System.out.println(idTest5);
                        break;
                    } else {
                        idTest5 = true;
                        JOptionPane.showMessageDialog(null, "사용 가능한 아이디입니다.");
                        //System.out.println(idTest5);
                        break;
                    }
                }
                if (idTest5 == true) {
                    idcheckLabel.setText("사용 가능한 아이디입니다.");
                    this.idConfirm = true;
                }
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "아이디를 다시 입력해주세요.", "아이디 예외", JOptionPane.PLAIN_MESSAGE);
        }
    }//GEN-LAST:event_idcButtonActionPerformed

    private void pwcButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwcButtonActionPerformed
        // TODO add your handling code here:

        String iPW = pwTF.getText();
        // ASCII 문자 비교를 위한 UpperCase
        String tmpPw = iPW.toUpperCase();
        // 문자열 길이
        int strLen = tmpPw.length();

        boolean test1 = true, test2 = true, test3 = true, test4 = true;

        // 비밀번호 공백 체크
        if (pwTF == null || "".equals(pwTF)) {
            JOptionPane.showMessageDialog(null, "비밀번호를 입력해주세요.");
            test1 = false;
            this.pw1Confirm = false;
        }

        // 글자 길이 체크
        if (strLen > 15 || strLen < 6) {
            JOptionPane.showMessageDialog(null, "비밀번호는 6자리 이상, 15자리 이하만 가능 합니다.");
            test2 = false;
            this.pw1Confirm = false;
        }

        // 공백 체크
        matcher = Pattern.compile(BLANKPT).matcher(tmpPw);
        if (matcher.find()) {
            JOptionPane.showMessageDialog(null, "비밀번호에 공백이 있습니다.");
            test3 = false;
            this.pw1Confirm = false;
        }

        // 비밀번호 정규식 체크
        matcher = Pattern.compile(checkPattern).matcher(tmpPw);
        if (!matcher.find()) {
            test4 = false;
            this.pw1Confirm = false;
        }

        String a = pwTF.getText().toString();

        if (test1 == true && test2 == true && test3 == true && test4 == true) {
            pwcheckLabel.setText("사용 가능한 비밀번호 입니다.");
            this.pw1Confirm = true;
            this.setVisible(true);
            return;
        } else {
            pwcheckLabel.setText("사용 불가능한 비밀번호 입니다.");
            this.setVisible(true);
            return;
        }
    }//GEN-LAST:event_pwcButtonActionPerformed

    private void pwTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pwTFActionPerformed

    private void pwc2ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwc2ButtonActionPerformed
        // TODO add your handling code here:
        if (pwTF.getText().equals(pw2TF.getText())) {
            pw2checkLabel.setText("입력한 비밀번호가 같습니다.");
            this.pw2Confirm = true;
            this.setVisible(true);
            return;
        } else {
            pw2checkLabel.setText("입력한 비밀번호가 다릅니다.");
            this.setVisible(true);
            this.pw2Confirm = false;
            return;
        }
    }//GEN-LAST:event_pwc2ButtonActionPerformed

    private void pw2TFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pw2TFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pw2TFActionPerformed

    private void phoneTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneTFActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton adminB;
    private javax.swing.JButton cancleButton;
    private javax.swing.JRadioButton customerB;
    private javax.swing.JLabel idLabel;
    private javax.swing.JTextField idTF;
    private javax.swing.JButton idcButton;
    private javax.swing.JLabel idcheckLabel;
    private javax.swing.JButton joinButton;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameTF;
    private javax.swing.JLabel namecheckLabel;
    private javax.swing.JLabel phoneLabel;
    private javax.swing.JTextField phoneTF;
    private javax.swing.JLabel phonecheckLabel;
    private javax.swing.JLabel pw2Label;
    private javax.swing.JPasswordField pw2TF;
    private javax.swing.JLabel pw2checkLabel;
    private javax.swing.JLabel pwLabel;
    private javax.swing.JPasswordField pwTF;
    private javax.swing.JButton pwc2Button;
    private javax.swing.JButton pwcButton;
    private javax.swing.JLabel pwcheckLabel;
    private javax.swing.ButtonGroup rGroup;
    // End of variables declaration//GEN-END:variables
}
