/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package marketapp.marketapp.ProductList;

import java.awt.Dimension;
import java.awt.Image;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import marketapp.marketapp.LoginPage;
import marketapp.marketapp.Order.Pay;
import notuse.Payment;
import static notuse.ProductListScreen.table;
import static notuse.ProductListScreen.tableImage;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

/**
 *
 * @author 이영근
 */
public class UserPageScreen extends javax.swing.JFrame {

    DefaultTableModel model;
    String filePath = "src\\main\\java\\Data\\ProductList.json";
    String memberfilePath = "src\\main\\java\\Data\\join.json";
    Object[][] contents;

    public static ImageIcon tableImage;
    public static String pName;
    public static String pPrice;
    public static String pDesc;

    String currentBalanceAmount;
    String addBalanceAmount;
    public static int currentB = 0;

    public static String passidBal = LoginPage.getIdBalance();

    public static String getPassidBal() {
        return passidBal;
    }
    
    
    public UserPageScreen() {
        initComponents();
        productList.addMouseListener(new TableMouse());
        productList.setRowHeight(150);
        productList.getTableHeader().setFont(new java.awt.Font("맑은 고딕", 1, 20));
        setVisible(true);
    }

    public DefaultTableModel getModel() {
        return model;
    }

    public DefaultTableModel Setting() {
        try {
            JSONParser parser = new JSONParser();
            Object obj = parser.parse(new FileReader(filePath));
            JSONObject JsonObj = (JSONObject) obj;
            JSONArray productInfoArr = (JSONArray) JsonObj.get("상품목록");

            String[] header = {"상품 이미지", "상품명", "상품정보", "가격"};
            contents = new Object[productInfoArr.size()][4];
            for (int i = 0; i < productInfoArr.size(); i++) {
                JSONObject jObj = (JSONObject) productInfoArr.get(i);
                this.tableImage = new ImageIcon((String) jObj.get("이미지"));
                Image needChangeImage = tableImage.getImage();
                Image changedImage = needChangeImage.getScaledInstance(300, 200, Image.SCALE_SMOOTH);
                ImageIcon changedImageIcon = new ImageIcon(changedImage);
                contents[i][0] = changedImageIcon;
                contents[i][1] = jObj.get("상품명");
                contents[i][2] = jObj.get("상품정보");
                contents[i][3] = jObj.get("가격");

                this.pName = (String) jObj.get("상품명");
                this.pPrice = (String) jObj.get("가격");
                this.pDesc = (String) jObj.get("상품정보");
            }

            this.model = new DefaultTableModel(contents, header) {
                //  Returning the Class of each column will allow different
                //  renderers to be used based on Class
                public Class getColumnClass(int column) {
                    return getValueAt(0, column).getClass();
                }
            };
        } catch (FileNotFoundException e) {
            throw new RuntimeException(e);
        } catch (IOException e) {
            throw new RuntimeException(e);
        } catch (ParseException e) {
            throw new RuntimeException(e);
        }
        return model;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        balanceFrame = new javax.swing.JFrame();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        currentBalanceTF = new javax.swing.JTextField();
        addBalanceTF = new javax.swing.JTextField();
        addBalanceButt = new javax.swing.JButton();
        cancelBalanceButt = new javax.swing.JButton();
        listPane = new javax.swing.JScrollPane();
        productList = new javax.swing.JTable(){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        jLabel1 = new javax.swing.JLabel();
        BasketButt = new javax.swing.JButton();
        MypageButt = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        searchTF = new javax.swing.JTextField();
        searchButt = new javax.swing.JButton();
        balanceButt = new javax.swing.JButton();

        balanceFrame.setSize(new java.awt.Dimension(594, 299));

        jLabel3.setFont(new java.awt.Font("맑은 고딕", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("현재잔고");

        jLabel4.setFont(new java.awt.Font("맑은 고딕", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("잔고추가");

        currentBalanceTF.setEditable(false);

        addBalanceButt.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        addBalanceButt.setText("추가");
        addBalanceButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBalanceButtActionPerformed(evt);
            }
        });

        cancelBalanceButt.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        cancelBalanceButt.setText("취소");
        cancelBalanceButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBalanceButtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout balanceFrameLayout = new javax.swing.GroupLayout(balanceFrame.getContentPane());
        balanceFrame.getContentPane().setLayout(balanceFrameLayout);
        balanceFrameLayout.setHorizontalGroup(
            balanceFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(balanceFrameLayout.createSequentialGroup()
                .addGroup(balanceFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(balanceFrameLayout.createSequentialGroup()
                        .addGap(185, 185, 185)
                        .addComponent(addBalanceButt, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cancelBalanceButt, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(balanceFrameLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(balanceFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(balanceFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(currentBalanceTF, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addBalanceTF, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(81, Short.MAX_VALUE))
        );
        balanceFrameLayout.setVerticalGroup(
            balanceFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(balanceFrameLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(balanceFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(currentBalanceTF, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(balanceFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addBalanceTF, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addGroup(balanceFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addBalanceButt, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .addComponent(cancelBalanceButt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(21, 21, 21))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        productList.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        productList.setModel(Setting());
        productList.setRowSelectionAllowed(false);
        productList.getTableHeader().setReorderingAllowed(false);
        listPane.setViewportView(productList);

        jLabel1.setFont(new java.awt.Font("맑은 고딕", 1, 24)); // NOI18N
        jLabel1.setText("Cououpang");

        BasketButt.setFont(new java.awt.Font("맑은 고딕", 1, 20)); // NOI18N
        BasketButt.setText("장바구니");

        MypageButt.setFont(new java.awt.Font("맑은 고딕", 1, 20)); // NOI18N
        MypageButt.setText("마이페이지");

        jLabel2.setFont(new java.awt.Font("맑은 고딕", 1, 24)); // NOI18N
        jLabel2.setText("검색");

        searchTF.setFont(new java.awt.Font("맑은 고딕", 0, 20)); // NOI18N
        searchTF.setText("상품명");
        searchTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTFActionPerformed(evt);
            }
        });

        searchButt.setFont(new java.awt.Font("맑은 고딕", 1, 20)); // NOI18N
        searchButt.setText("확인");

        balanceButt.setFont(new java.awt.Font("맑은 고딕", 1, 20)); // NOI18N
        balanceButt.setText("잔고추가");
        balanceButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                balanceButtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 3, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(balanceButt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(MypageButt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BasketButt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(listPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1403, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(280, 280, 280)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchTF, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(searchButt, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(264, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(103, 103, 103)
                .addComponent(BasketButt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(MypageButt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(balanceButt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(searchTF, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(searchButt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(listPane, javax.swing.GroupLayout.PREFERRED_SIZE, 887, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTFActionPerformed

    private void balanceButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_balanceButtActionPerformed
        // TODO add your handling code here:
        addBalanceTF.setText("");
        try {
            JSONParser parser = new JSONParser();
            Object obj = parser.parse(new FileReader(memberfilePath));
            JSONObject loadJsonObj = (JSONObject) obj;
            JSONArray memberListArr = (JSONArray) loadJsonObj.get("member");

            for (int i = 0; i < memberListArr.size(); i++) {
                JSONObject memList = (JSONObject) memberListArr.get(i);
                String checkId = (String) memList.get("ID");
                String currentId = LoginPage.getLoginedID();
                
                if (checkId.equals(currentId)) {
                    String balance = (String) memList.get("Balance");
                    this.currentBalanceAmount = balance;
                    break;
                }
            }
        } catch (IOException e) {
            throw new RuntimeException(e);
        } catch (ParseException e) {
            throw new RuntimeException(e);
        }
        currentBalanceTF.setText(currentBalanceAmount);
        balanceFrame.setVisible(true);
    }//GEN-LAST:event_balanceButtActionPerformed

    private void cancelBalanceButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBalanceButtActionPerformed
        // TODO add your handling code here:
        balanceFrame.dispose();
    }//GEN-LAST:event_cancelBalanceButtActionPerformed

    private void addBalanceButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBalanceButtActionPerformed
        // TODO add your handling code here:
        this.addBalanceAmount = addBalanceTF.getText().toString();
        currentB = Integer.parseInt(currentBalanceAmount);
        currentB += Integer.parseInt(addBalanceAmount);
        String calBalance = String.valueOf(currentB);
        this.passidBal = calBalance;
        try {
            JSONParser parser = new JSONParser();
            Object obj = parser.parse(new FileReader(memberfilePath));
            JSONObject loadJsonObj = (JSONObject) obj;
            JSONArray memberListArr = (JSONArray) loadJsonObj.get("member");

            for (int i = 0; i < memberListArr.size(); i++) {
                JSONObject memList = (JSONObject) memberListArr.get(i);
                String checkId = (String) memList.get("ID");
                String currentId = LoginPage.getLoginedID();
                if (checkId.equals(currentId)) {
                    memList.replace("Balance", calBalance);
                    
                    break;
                }
            }
            try {
                FileWriter file = new FileWriter(memberfilePath);
                file.write(loadJsonObj.toJSONString());
                file.flush();
            } catch (IOException ae) {
                ae.printStackTrace();
            }
        } catch (IOException e) {
            throw new RuntimeException(e);
        } catch (ParseException e) {
            throw new RuntimeException(e);
        }
        balanceFrame.dispose();
    }//GEN-LAST:event_addBalanceButtActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BasketButt;
    private javax.swing.JButton MypageButt;
    private javax.swing.JButton addBalanceButt;
    private javax.swing.JTextField addBalanceTF;
    private javax.swing.JButton balanceButt;
    private javax.swing.JFrame balanceFrame;
    private javax.swing.JButton cancelBalanceButt;
    private javax.swing.JTextField currentBalanceTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane listPane;
    public static javax.swing.JTable productList;
    private javax.swing.JButton searchButt;
    private javax.swing.JTextField searchTF;
    // End of variables declaration//GEN-END:variables
}
