/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package marketapp.marketapp.Order;

import java.awt.Image;
import java.awt.event.MouseEvent;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import static marketapp.marketapp.ProductList.AdminPageScreen.tableImage;
import marketapp.marketapp.Order.ChangeShippingList;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

/**
 *
 * @author 이영근
 */
public class ShippingList extends javax.swing.JFrame {

    String filePath = "src\\main\\java\\Data\\ShippingList.json";
    DefaultTableModel model;
    Boolean checkMouseTable = false;
    int srow;
    public static String tableName;
    public static String tableNumber;
    public static String tableAddress;
    public static String tableRequest;
    Boolean isAdd = false;
    Boolean isEdit = false;

    public static String getTableNumber() {
        return tableNumber;
    }

    public static String getTableAddress() {
        return tableAddress;
    }

    public static String getTableRequest() {
        return tableRequest;
    }

    public static String getTableName() {
        return tableName;
    }

    public static String getShipAddAddressTF() {
        return shipAddAddressTF.getText().toString();
    }

    public static String getShipAddNameTF() {
        return shipAddNameTF.getText().toString();
    }

    public static String getShipAddNumberTF() {
        return shipAddNumberTF.getText().toString();
    }

    public static String getShipAddRequestTF() {
        return shipAddRequestTF.getText().toString();
    }

    /**
     * Creates new form ShippingAddress
     */
    public ShippingList() {
        initComponents();
        checkMouseTable = false;
        isAdd = false;
        isEdit = false;
        setVisible(true);
    }

    public DefaultTableModel Setting() {
        try {
            JSONParser parser = new JSONParser();
            Object obj = parser.parse(new FileReader(filePath));
            JSONObject JsonObj = (JSONObject) obj;
            JSONArray productInfoArr = (JSONArray) JsonObj.get("배송지정보");

            String[] header = {"받는사람", "전화번호", "주소", "요청사항"};
            Object[][] contents = new Object[productInfoArr.size()][4];
            for (int i = 0; i < productInfoArr.size(); i++) {
                JSONObject jObj = (JSONObject) productInfoArr.get(i);
                contents[i][0] = jObj.get("받는사람");
                contents[i][1] = jObj.get("전화번호");
                contents[i][2] = jObj.get("주소");
                contents[i][3] = jObj.get("요청사항");
            }

            this.model = new DefaultTableModel(contents, header) {
                //  Returning the Class of each column will allow different
                //  renderers to be used based on Class
                public Class getColumnClass(int column) {
                    return getValueAt(0, column).getClass();
                }
            };
        } catch (FileNotFoundException e) {
            throw new RuntimeException(e);
        } catch (IOException e) {
            throw new RuntimeException(e);
        } catch (ParseException e) {
            throw new RuntimeException(e);
        }
        return model;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Input = new javax.swing.JFrame();
        jLabel1 = new javax.swing.JLabel();
        shipAddNameTF = new javax.swing.JTextField();
        shipAddNumberTF = new javax.swing.JTextField();
        shipAddAddressTF = new javax.swing.JTextField();
        shipAddRequestTF = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        shipAddButt2 = new javax.swing.JButton();
        shipAddCancelButt = new javax.swing.JButton();
        shippingListPane = new javax.swing.JScrollPane();
        shippingListTable = new javax.swing.JTable(){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        addShippingListButt = new javax.swing.JButton();
        deleteShippingListButt = new javax.swing.JButton();
        editShippingListButt = new javax.swing.JButton();
        selectShippingListButt = new javax.swing.JButton();

        Input.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        Input.setSize(new java.awt.Dimension(888, 422));

        jLabel1.setFont(new java.awt.Font("맑은 고딕", 1, 20)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("배송정보");

        jLabel5.setFont(new java.awt.Font("맑은 고딕", 0, 16)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("요청사항");

        jLabel4.setFont(new java.awt.Font("맑은 고딕", 0, 16)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("주소");

        jLabel3.setFont(new java.awt.Font("맑은 고딕", 0, 16)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("전화번호");

        jLabel2.setFont(new java.awt.Font("맑은 고딕", 0, 16)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("받는사람");

        shipAddButt2.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        shipAddButt2.setText("추가");
        shipAddButt2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shipAddButt2ActionPerformed(evt);
            }
        });

        shipAddCancelButt.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        shipAddCancelButt.setText("취소");
        shipAddCancelButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shipAddCancelButtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout InputLayout = new javax.swing.GroupLayout(Input.getContentPane());
        Input.getContentPane().setLayout(InputLayout);
        InputLayout.setHorizontalGroup(
            InputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InputLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(787, 787, 787))
            .addGroup(InputLayout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addGroup(InputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(InputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(InputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(InputLayout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(shipAddNumberTF))
                            .addGroup(InputLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(shipAddNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(InputLayout.createSequentialGroup()
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(shipAddRequestTF, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(InputLayout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(shipAddAddressTF, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InputLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(shipAddButt2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(shipAddCancelButt, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );
        InputLayout.setVerticalGroup(
            InputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InputLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(InputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(shipAddNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(InputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(shipAddNumberTF)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(InputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(shipAddAddressTF, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(InputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(shipAddRequestTF)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addGroup(InputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(shipAddCancelButt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(shipAddButt2, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE))
                .addGap(21, 21, 21))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("배송지 정보");

        shippingListTable.setModel(Setting());
        shippingListTable.setRowSelectionAllowed(false);
        shippingListTable.getTableHeader().setReorderingAllowed(false);

        shippingListTable.setModel(Setting());
        shippingListTable.setToolTipText("");
        shippingListTable.setRowSelectionAllowed(false);
        shippingListTable.getTableHeader().setReorderingAllowed(false);
        shippingListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                shippingListTableMouseClicked(evt);
            }
        });
        shippingListPane.setViewportView(shippingListTable);

        addShippingListButt.setFont(new java.awt.Font("맑은 고딕", 1, 14)); // NOI18N
        addShippingListButt.setText("추가");
        addShippingListButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addShippingListButtActionPerformed(evt);
            }
        });

        deleteShippingListButt.setFont(new java.awt.Font("맑은 고딕", 1, 14)); // NOI18N
        deleteShippingListButt.setText("삭제");
        deleteShippingListButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteShippingListButtActionPerformed(evt);
            }
        });

        editShippingListButt.setFont(new java.awt.Font("맑은 고딕", 1, 14)); // NOI18N
        editShippingListButt.setText("수정");
        editShippingListButt.setToolTipText("");
        editShippingListButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editShippingListButtActionPerformed(evt);
            }
        });

        selectShippingListButt.setFont(new java.awt.Font("맑은 고딕", 1, 14)); // NOI18N
        selectShippingListButt.setText("선택");
        selectShippingListButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectShippingListButtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(shippingListPane)
            .addGroup(layout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addComponent(addShippingListButt, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(deleteShippingListButt, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(editShippingListButt, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(selectShippingListButt, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(131, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(shippingListPane, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(editShippingListButt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(selectShippingListButt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(deleteShippingListButt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addShippingListButt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addShippingListButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addShippingListButtActionPerformed
        // TODO add your handling code here:
        this.isAdd = true;
        shipAddNameTF.setText("");
        shipAddNumberTF.setText("");
        shipAddAddressTF.setText("");
        shipAddRequestTF.setText("");
        Input.setVisible(true);
    }//GEN-LAST:event_addShippingListButtActionPerformed

    private void selectShippingListButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectShippingListButtActionPerformed
        // TODO add your handling code here:
        Pay.setCheckAddressInput2(true);
        srow = shippingListTable.getSelectedRow();
        this.tableName = (String) shippingListTable.getValueAt(srow, 0);
        if (srow == -1) {
            JOptionPane.showMessageDialog(this, "선택할 행선택!!");
            return;
        } else {
            String name = (String) shippingListTable.getValueAt(srow, 0);
            String phone = (String) shippingListTable.getValueAt(srow, 1);
            String address = (String) shippingListTable.getValueAt(srow, 2);
            String require = (String) shippingListTable.getValueAt(srow, 3);

            // 주소를 json에 저장할 때 시, 구, 상세주소로 나누어서 가져오기?
            Pay.shipNameTF.setText(name);
            Pay.shipNumberTF.setText(phone);
            Pay.shipAddressTF.setText(address);
            Pay.shipRequestTF.setText(require);
            JOptionPane.showMessageDialog(this, "배송지가 선택되었습니다.");
            dispose();
        }
    }//GEN-LAST:event_selectShippingListButtActionPerformed

    private void deleteShippingListButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteShippingListButtActionPerformed
        // TODO add your handling code here:
        if (checkMouseTable == false) {
            JOptionPane.showMessageDialog(this, "삭제할 행선택!!");
            return;
        } else {
            ChangeShippingList.deleteShippingList();
            shippingListTable.setModel(Setting());
            shippingListTable.revalidate();
            shippingListTable.repaint();
            shippingListTable.setVisible(true);
            shippingListPane.setVisible(true);
        }
    }//GEN-LAST:event_deleteShippingListButtActionPerformed

    private void shippingListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shippingListTableMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 1) {
            int row = shippingListTable.getSelectedRow();
            Object o[] = new Object[shippingListTable.getColumnCount()];
            for (int col = 0; col < shippingListTable.getColumnCount(); col++) {
                o[col] = shippingListTable.getValueAt(row, col);
            }
            this.tableName = (String) o[0];
            this.tableNumber = (String) o[1];
            this.tableAddress = (String) o[2];
            this.tableRequest = (String) o[3];
            this.checkMouseTable = true;
        }
    }//GEN-LAST:event_shippingListTableMouseClicked

    private void shipAddCancelButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shipAddCancelButtActionPerformed
        // TODO add your handling code here:
        Input.dispose();
    }//GEN-LAST:event_shipAddCancelButtActionPerformed

    private void shipAddButt2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shipAddButt2ActionPerformed
        // TODO add your handling code here:
        if (isAdd == true) {
            ChangeShippingList.addShippingList();
        } else if (isEdit == true){
            ChangeShippingList.editShippingList();
        }
        shippingListTable.setModel(Setting());
        shippingListTable.revalidate();
        shippingListTable.repaint();
        shippingListTable.setVisible(true);
        shippingListPane.setVisible(true);
        Input.dispose();
    }//GEN-LAST:event_shipAddButt2ActionPerformed

    private void editShippingListButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editShippingListButtActionPerformed
        // TODO add your handling code here:
        this.isEdit = true;
        shipAddNameTF.setText(getTableName());
        shipAddNumberTF.setText(getTableNumber());
        shipAddAddressTF.setText(getTableAddress());
        shipAddRequestTF.setText(getTableRequest());
        Input.setVisible(true);
    }//GEN-LAST:event_editShippingListButtActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFrame Input;
    private javax.swing.JButton addShippingListButt;
    private javax.swing.JButton deleteShippingListButt;
    private javax.swing.JButton editShippingListButt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JButton selectShippingListButt;
    public static javax.swing.JTextField shipAddAddressTF;
    private javax.swing.JButton shipAddButt2;
    private javax.swing.JButton shipAddCancelButt;
    public static javax.swing.JTextField shipAddNameTF;
    public static javax.swing.JTextField shipAddNumberTF;
    public static javax.swing.JTextField shipAddRequestTF;
    private javax.swing.JScrollPane shippingListPane;
    private javax.swing.JTable shippingListTable;
    // End of variables declaration//GEN-END:variables
}
