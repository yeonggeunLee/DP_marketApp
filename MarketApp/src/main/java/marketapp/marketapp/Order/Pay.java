package marketapp.marketapp.Order;

import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.time.*;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import marketapp.marketapp.ProductList.UserPageScreen;
import marketapp.marketapp.Login.LoginPage;
import marketapp.marketapp.Order.PayPattern.BalancePayment;
import marketapp.marketapp.Order.PayPattern.Payment;
import marketapp.marketapp.Order.PayPattern.PaymentStrategy;
import marketapp.marketapp.Order.PayPattern.TransferPayment;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

/**
 * 결제 페이지 UI 및 기능을 구현한 클래스.
 * @author 이영근
 */
public class Pay extends javax.swing.JFrame {

    public String orderListFilePath = "src\\main\\java\\Data\\OrderList.json";
    String memberfilePath = "src\\main\\java\\Data\\join.json";
    public static String orderProductName;
    public static String passBal = UserPageScreen.getPassidBal();
    public static Boolean checkAddressInput = false;
    public static Boolean checkAddressInput2 = false;
    Payment payment = new Payment();

    public static void setCheckAddressInput2(Boolean checkAddressInput2) {
        Pay.checkAddressInput2 = checkAddressInput2;
    }

    public String getOrderProductName() {
        return orderProductName;
    }

    /**
     * Creates new form Pay
     */
    public Pay() {
        initComponents();
        checkAddressInput = false;
        checkAddressInput2 = false;
        transferPayPanel.setVisible(false);
        this.passBal = getBalance();
        currentPayBalanceTF.setText(passBal);
        setOrderProduct();
        setVisible(true);
    }

    public String getBalance() {
        String currentId = LoginPage.getLoginedID();
        String currentBalance = null;
        try {
            JSONParser parser1 = new JSONParser();
            Object obj1 = parser1.parse(new FileReader(memberfilePath));
            JSONObject loadJsonObj1 = (JSONObject) obj1;
            JSONArray memberListArr = (JSONArray) loadJsonObj1.get("member");

            for (int i = 0; i < memberListArr.size(); i++) {
                JSONObject memList = (JSONObject) memberListArr.get(i);
                String checkId = (String) memList.get("ID");
                if (checkId.equals(currentId)) {
                    currentBalance = (String) memList.get("Balance");
                    break;
                }
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Pay.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Pay.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(Pay.class.getName()).log(Level.SEVERE, null, ex);
        }
        return currentBalance;
    }

    public void setOrderProduct() {
        StringBuffer setText = new StringBuffer();
        try {
            JSONParser parser = new JSONParser();
            Object obj = parser.parse(new FileReader(orderListFilePath));
            JSONObject loadJsonObj = (JSONObject) obj;
            JSONArray orderInfoArr = (JSONArray) loadJsonObj.get("주문내역");

            for (int i = 0; i < orderInfoArr.size(); i++) {
                JSONObject orderInfo = (JSONObject) orderInfoArr.get(i);
                this.orderProductName = (String) orderInfo.get("주문상품");
                String text = "주문상품 : " + getOrderProductName() + "\n";
                setText.append(text);
            }
            orderListTA.setText(setText.toString());
        } catch (FileNotFoundException e) {
            throw new RuntimeException(e);
        } catch (IOException e) {
            throw new RuntimeException(e);
        } catch (ParseException e) {
            throw new RuntimeException(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        shipNameTF = new javax.swing.JTextField();
        shipNumberTF = new javax.swing.JTextField();
        shipAddressTF = new javax.swing.JTextField();
        shipRequestTF = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        payButt = new javax.swing.JButton();
        cancelButt = new javax.swing.JButton();
        payPanel = new javax.swing.JPanel();
        payBalanceRadio = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderListTA = new javax.swing.JTextArea();
        transferPayPanel = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        balancePayPanel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        currentPayBalanceTF = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        orderPriceTF = new javax.swing.JTextField();
        payTransferRadio = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("주문 / 결제");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("맑은 고딕", 1, 20)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("배송정보");

        jButton1.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        jButton1.setText("배송지 선택");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("맑은 고딕", 0, 16)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("받는사람");

        jLabel3.setFont(new java.awt.Font("맑은 고딕", 0, 16)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("전화번호");

        jLabel4.setFont(new java.awt.Font("맑은 고딕", 0, 16)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("주소");

        jLabel5.setFont(new java.awt.Font("맑은 고딕", 0, 16)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("요청사항");

        shipNameTF.setEditable(false);

        shipNumberTF.setEditable(false);

        shipAddressTF.setEditable(false);

        shipRequestTF.setEditable(false);

        jLabel6.setFont(new java.awt.Font("맑은 고딕", 1, 20)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("결제");

        payButt.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        payButt.setText("결제");
        payButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payButtActionPerformed(evt);
            }
        });

        cancelButt.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        cancelButt.setText("취소");
        cancelButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtActionPerformed(evt);
            }
        });

        buttonGroup1.add(payBalanceRadio);
        payBalanceRadio.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        payBalanceRadio.setSelected(true);
        payBalanceRadio.setText("잔고");
        payBalanceRadio.setToolTipText("");
        payBalanceRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payBalanceRadioActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("주문내역");

        orderListTA.setEditable(false);
        orderListTA.setColumns(20);
        orderListTA.setFont(new java.awt.Font("맑은 고딕", 0, 15)); // NOI18N
        orderListTA.setRows(5);
        jScrollPane1.setViewportView(orderListTA);

        jLabel10.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        jLabel10.setText("입금계좌 : ");

        jLabel11.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        jLabel11.setText("예금주 : ");

        jTextField1.setEditable(false);
        jTextField1.setText("1234-1234-1234-1234");

        jLabel12.setText("홍길동");
        jLabel12.setToolTipText("");

        javax.swing.GroupLayout transferPayPanelLayout = new javax.swing.GroupLayout(transferPayPanel);
        transferPayPanel.setLayout(transferPayPanelLayout);
        transferPayPanelLayout.setHorizontalGroup(
            transferPayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(transferPayPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(transferPayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(transferPayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(244, Short.MAX_VALUE))
        );
        transferPayPanelLayout.setVerticalGroup(
            transferPayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(transferPayPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(transferPayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(transferPayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(24, 24, 24))
        );

        jLabel7.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("현재잔고");

        currentPayBalanceTF.setEditable(false);
        currentPayBalanceTF.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N

        jLabel8.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("주문가격");

        orderPriceTF.setEditable(false);
        orderPriceTF.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N

        javax.swing.GroupLayout balancePayPanelLayout = new javax.swing.GroupLayout(balancePayPanel);
        balancePayPanel.setLayout(balancePayPanelLayout);
        balancePayPanelLayout.setHorizontalGroup(
            balancePayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 527, Short.MAX_VALUE)
            .addGroup(balancePayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(balancePayPanelLayout.createSequentialGroup()
                    .addGap(19, 19, 19)
                    .addGroup(balancePayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGap(18, 18, 18)
                    .addGroup(balancePayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(orderPriceTF)
                        .addComponent(currentPayBalanceTF, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(49, Short.MAX_VALUE)))
        );
        balancePayPanelLayout.setVerticalGroup(
            balancePayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(balancePayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(balancePayPanelLayout.createSequentialGroup()
                    .addGap(21, 21, 21)
                    .addGroup(balancePayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(currentPayBalanceTF, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(41, 41, 41)
                    .addGroup(balancePayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(orderPriceTF, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(21, Short.MAX_VALUE)))
        );

        buttonGroup1.add(payTransferRadio);
        payTransferRadio.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        payTransferRadio.setText("계좌이체");
        payTransferRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payTransferRadioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout payPanelLayout = new javax.swing.GroupLayout(payPanel);
        payPanel.setLayout(payPanelLayout);
        payPanelLayout.setHorizontalGroup(
            payPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(payPanelLayout.createSequentialGroup()
                .addGroup(payPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(payPanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 790, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(payPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(payPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(payPanelLayout.createSequentialGroup()
                                .addComponent(payBalanceRadio, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(68, 68, 68)
                                .addComponent(payTransferRadio))
                            .addComponent(jLabel9)
                            .addGroup(payPanelLayout.createSequentialGroup()
                                .addComponent(balancePayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(transferPayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(93, 93, Short.MAX_VALUE))
        );
        payPanelLayout.setVerticalGroup(
            payPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, payPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(payPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(payBalanceRadio)
                    .addComponent(payTransferRadio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(payPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(transferPayPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(balancePayPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(38, 38, 38))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(shipAddressTF, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(shipNumberTF))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(shipNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(shipRequestTF, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(844, Short.MAX_VALUE)
                .addComponent(payButt, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cancelButt, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53))
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(payPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(shipNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(shipNumberTF, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(shipAddressTF, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(shipRequestTF)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(payPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(payButt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelButt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void payButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payButtActionPerformed
        // TODO add your handling code here:
        if (checkAddressInput == true && checkAddressInput2 == true) {
            int calB1 = Integer.parseInt(currentPayBalanceTF.getText());
            int calB2 = Integer.parseInt(orderPriceTF.getText());
            String calFinal = String.valueOf(calB1 - calB2);
            this.passBal = calFinal;
            String currentId = LoginPage.getLoginedID();
            ZonedDateTime time = ZonedDateTime.now(ZoneId.of("Asia/Seoul"));
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");

            if (payBalanceRadio.isSelected()) {
                if (calB1 >= calB2) {
                    PaymentStrategy balancePayment = new BalancePayment();
                    payment.setPaymentStrategy(balancePayment);
                    payment.performPayment(calFinal);
                    JOptionPane.showMessageDialog(null, "결제가 완료되었습니다.");
                    dispose();
                } else if (calB1 < calB2) {
                    JOptionPane.showMessageDialog(null, "잔액이 부족합니다.");
                }
            } else if (payTransferRadio.isSelected()) {
                PaymentStrategy transferPayment = new TransferPayment();
                payment.setPaymentStrategy(transferPayment);
                payment.performPayment(calFinal);
                JOptionPane.showMessageDialog(null, "1시간 내로 입금 완료되지 않으면 주문이 취소됩니다.");
                dispose();
            }
        } else {
            JOptionPane.showMessageDialog(null, "배송주소를 선택해주세요.");
        }
    }//GEN-LAST:event_payButtActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        ShippingListPage sList = new ShippingListPage();
        this.checkAddressInput = true;
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cancelButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_cancelButtActionPerformed

    private void payBalanceRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payBalanceRadioActionPerformed
        // TODO add your handling code here:
        if (payBalanceRadio.isSelected()) {
            transferPayPanel.setVisible(false);
            balancePayPanel.setVisible(true);
            payPanel.repaint();
            payPanel.revalidate();
            payPanel.setVisible(true);
        }
    }//GEN-LAST:event_payBalanceRadioActionPerformed

    private void payTransferRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payTransferRadioActionPerformed
        // TODO add your handling code here:
        if (payTransferRadio.isSelected()) {
            balancePayPanel.setVisible(false);
            transferPayPanel.setVisible(true);
            payPanel.repaint();
            payPanel.revalidate();
            payPanel.setVisible(true);
        }
    }//GEN-LAST:event_payTransferRadioActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel balancePayPanel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancelButt;
    public static javax.swing.JTextField currentPayBalanceTF;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    public static javax.swing.JTextArea orderListTA;
    public static javax.swing.JTextField orderPriceTF;
    private javax.swing.JRadioButton payBalanceRadio;
    private javax.swing.JButton payButt;
    private javax.swing.JPanel payPanel;
    private javax.swing.JRadioButton payTransferRadio;
    public static javax.swing.JTextField shipAddressTF;
    public static javax.swing.JTextField shipNameTF;
    public static javax.swing.JTextField shipNumberTF;
    public static javax.swing.JTextField shipRequestTF;
    private javax.swing.JPanel transferPayPanel;
    // End of variables declaration//GEN-END:variables
}
